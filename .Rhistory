stripchart(NOx2$valeur,main="Valeurs de NOx sur l'ensemble du département 44",xlab="µg/m3 eq NO2", ylab="NOx (NO+NO2)",method="jitter",col="orange",pch=20,vertical=TRUE);lines(density(NOx2$valeur));
graphe1<-boxplot(NOx2$valeur,col="green",main="Valeurs de NOx sur l'ensemble du département 44",xlab="µg/m3 eq NO2", ylab="NOx (NO+NO2)")
plot(NOx2$date,NOx2$valeur,col="grey",border= "black",main="Valeurs de NOx dans le temps",xlab="µg/m3 eq NO2", ylab="Date")
summary(NOx2$T..département)
sd(NOx2$T..département)
var(NOx2$T..département)
boxplot(NOx2$T..département,col="green3", main="Température moyenne journalière de la Loire Atlantique du 16/9 au 16/10",xlab="°C", ylab="Température moyenne")
stripchart(NOx2$T..département,main="Temperature moyenne journaliere sur le departement",xlab="°C", ylab="T moyenne ",col="brown4",pch=20, method="jitter");
22.33-13.43
plot(NOx2$date,NOx2$T..département, main="Valeurs des temperature en fonction de la date",xlab="Temperature journaliere moyenne en °C", ylab="Date");
tmax <-NOx2%>% filter(NOx2$date=="2019-09-21")
tmax
tmin<- NOx2%>% filter(NOx2$date=="2019-10-15")
tmin
mean(tmax$valeur)
mean(tmin$valeur)
mean(NOx2$valeur)
T=c("max","min","moyenne")
Moyenne_Nox=c(mean(tmax$valeur),mean(tmin$valeur),mean(NOx2$valeur))
Data =data.frame(T,Moyenne_Nox)
Data
NOx <- read.csv("~/Bureau/Documents/Master medas/Stat 1/stat1_examen/NOx.csv")
View(NOx)
summary (NOx)
str(NOx)
library(dplyr)
NOx2<-NOx%>% filter(statut_valid==TRUE)
NOx2
summary(NOx2)
summary (NOx2$valeur)
sd(NOx2$valeur)
var(NOx2$valeur)
hist(NOx2$valeur,main="Valeurs de NOx sur l'ensemble du département 44",xlab="µg/m3 eq NO2", ylab="NOx",col="pink", breaks= 50,freq=FALSE) ;lines(density(NOx2$valeur)) ;
stripchart(NOx2$valeur,main="Valeurs de NOx sur l'ensemble du département 44",xlab="µg/m3 eq NO2", ylab="NOx (NO+NO2)",method="jitter",col="orange",pch=20,vertical=TRUE);lines(density(NOx2$valeur));
graphe1<-boxplot(NOx2$valeur,col="green",main="Valeurs de NOx sur l'ensemble du département 44",xlab="µg/m3 eq NO2", ylab="NOx (NO+NO2)")
plot(NOx2$date,NOx2$valeur,col="grey",border= "black",main="Valeurs de NOx dans le temps",xlab="µg/m3 eq NO2", ylab="Date")
summary(NOx2$T..département)
sd(NOx2$T..département)
var(NOx2$T..département)
boxplot(NOx2$T..département,col="green3", main="Température moyenne journalière de la Loire Atlantique du 16/9 au 16/10",xlab="°C", ylab="Température moyenne")
stripchart(NOx2$T..département,main="Temperature moyenne journaliere sur le departement",xlab="°C", ylab="T moyenne ",col="brown4",pch=20, method="jitter");
22.33-13.43
plot(NOx2$date,NOx2$T..département, main="Valeurs des temperature en fonction de la date",xlab="Temperature journaliere moyenne en °C", ylab="Date");
tmax <-NOx2%>% filter(NOx2$date=="2019-09-21")
tmax
tmin<- NOx2%>% filter(NOx2$date=="2019-10-15")
tmin
mean(tmax$valeur)
mean(tmin$valeur)
mean(NOx2$valeur)
T=c("max","min","moyenne")
Moyenne_Nox=c(mean(tmax$valeur),mean(tmin$valeur),mean(NOx2$valeur))
Data =data.frame(T,Moyenne_Nox)
Data
length(NOx2$valeur)
length(NOx2$T..département)
cor.test (NOx2$T..département,NOx2$valeur,method="spearman")
Les variables ne suivent pas de loi normal, le test de Pearsonn n'est donc pas fiable. Le test de spearan ayant échouer, il peut etre interessant de voir ce que cela donne tout de meme par curiosite.
library(dplyr)
NOx2<-NOx%>% filter(statut_valid==TRUE)
NOx2
summary(NOx2)
library(dplyr)
NOx2<-NOx%>% filter(statut_valid==TRUE)
NOx2<-NOx%>% filter(statut_valid==TRUE)
NOx2
NOx <- read.csv("~/Bureau/Documents/Master medas/Stat 1/stat1_examen/NOx.csv")
View(NOx)
NOx <- read.csv("~/Bureau/Documents/Master medas/Stat 1/stat1_examen/NOx.csv")
View(NOx)
summary (NOx)
str(NOx)
NOx2<-NOx%>% filter(statut_valid==TRUE)
NOx2
summary(NOx2)
summary (NOx2$valeur)
sd(NOx2$valeur)
var(NOx2$valeur)
hist(NOx2$valeur,main="Valeurs de NOx sur l'ensemble du département 44",xlab="µg/m3 eq NO2", ylab="NOx",col="pink", breaks= 50,freq=FALSE) ;lines(density(NOx2$valeur)) ;
stripchart(NOx2$valeur,main="Valeurs de NOx sur l'ensemble du département 44",xlab="µg/m3 eq NO2", ylab="NOx (NO+NO2)",method="jitter",col="orange",pch=20,vertical=TRUE);lines(density(NOx2$valeur));
graphe1<-boxplot(NOx2$valeur,col="green",main="Valeurs de NOx sur l'ensemble du département 44",xlab="µg/m3 eq NO2", ylab="NOx (NO+NO2)")
plot(NOx2$date,NOx2$valeur,col="grey",border= "black",main="Valeurs de NOx dans le temps",xlab="µg/m3 eq NO2", ylab="Date")
summary(NOx2$T..département)
sd(NOx2$T..département)
var(NOx2$T..département)
boxplot(NOx2$T..département,col="green3", main="Température moyenne journalière de la Loire Atlantique du 16/9 au 16/10",xlab="°C", ylab="Température moyenne")
stripchart(NOx2$T..département,main="Temperature moyenne journaliere sur le departement",xlab="°C", ylab="T moyenne ",col="brown4",pch=20, method="jitter");
22.33-13.43
plot(NOx2$date,NOx2$T..département, main="Valeurs des temperature en fonction de la date",xlab="Temperature journaliere moyenne en °C", ylab="Date");
tmax <-NOx2%>% filter(NOx2$date=="2019-09-21")
tmax
tmin<- NOx2%>% filter(NOx2$date=="2019-10-15")
tmin
mean(tmax$valeur)
mean(tmin$valeur)
mean(NOx2$valeur)
T=c("max","min","moyenne")
Moyenne_Nox=c(mean(tmax$valeur),mean(tmin$valeur),mean(NOx2$valeur))
Data =data.frame(T,Moyenne_Nox)
Data
length(NOx2$valeur)
length(NOx2$T..département)
cor.test (NOx2$T..département,NOx2$valeur,method="spearman")
Les variables ne suivent pas de loi normal, le test de Pearsonn n'est donc pas fiable. Le test de spearan ayant échouer, il peut etre interessant de voir ce que cela donne tout de meme par curiosite.
str(NOx)
NOx2<-NOx%>% filter(statut_valid==TRUE)
NOx2
summary (NOx2$valeur)
sd(NOx2$valeur)
hist(NOx2$valeur,main="Valeurs de NOx sur l'ensemble du département 44",xlab="µg/m3 eq NO2", ylab="NOx",col="pink", breaks= 50,freq=FALSE) ;lines(density(NOx2$valeur)) ;
stripchart(NOx2$valeur,main="Valeurs de NOx sur l'ensemble du département 44",xlab="µg/m3 eq NO2", ylab="NOx (NO+NO2)",method="jitter",col="orange",pch=20,vertical=TRUE);lines(density(NOx2$valeur));
NOx <- read.csv("~/Bureau/Documents/Master medas/Stat 1/stat1_examen/NOx.csv")
View(NOx)
summary (NOx)
str(NOx)
NOx2<-NOx%>% filter(statut_valid==TRUE)
NOx2
summary(NOx2)
summary (NOx2$valeur)
sd(NOx2$valeur)
var(NOx2$valeur)
hist(NOx2$valeur,main="Valeurs de NOx sur l'ensemble du département 44",xlab="µg/m3 eq NO2", ylab="NOx",col="pink", breaks= 50,freq=FALSE) ;lines(density(NOx2$valeur)) ;
stripchart(NOx2$valeur,main="Valeurs de NOx sur l'ensemble du département 44",xlab="µg/m3 eq NO2", ylab="NOx (NO+NO2)",method="jitter",col="orange",pch=20,vertical=TRUE);lines(density(NOx2$valeur));
graphe1<-boxplot(NOx2$valeur,col="green",main="Valeurs de NOx sur l'ensemble du département 44",xlab="µg/m3 eq NO2", ylab="NOx (NO+NO2)")
plot(NOx2$date,NOx2$valeur,col="grey",border= "black",main="Valeurs de NOx dans le temps",xlab="µg/m3 eq NO2", ylab="Date")
summary(NOx2$T..département)
sd(NOx2$T..département)
var(NOx2$T..département)
boxplot(NOx2$T..département,col="green3", main="Température moyenne journalière de la Loire Atlantique du 16/9 au 16/10",xlab="°C", ylab="Température moyenne")
stripchart(NOx2$T..département,main="Temperature moyenne journaliere sur le departement",xlab="°C", ylab="T moyenne ",col="brown4",pch=20, method="jitter");
22.33-13.43
plot(NOx2$date,NOx2$T..département, main="Valeurs des temperature en fonction de la date",xlab="Temperature journaliere moyenne en °C", ylab="Date");
tmax <-NOx2%>% filter(NOx2$date=="2019-09-21")
tmax
tmin<- NOx2%>% filter(NOx2$date=="2019-10-15")
tmin
mean(tmax$valeur)
mean(tmin$valeur)
mean(NOx2$valeur)
T=c("max","min","moyenne")
Moyenne_Nox=c(mean(tmax$valeur),mean(tmin$valeur),mean(NOx2$valeur))
Data =data.frame(T,Moyenne_Nox)
Data
length(NOx2$valeur)
length(NOx2$T..département)
cor.test (NOx2$T..département,NOx2$valeur,method="spearman")
Les variables ne suivent pas de loi normal, le test de Pearsonn n'est donc pas fiable. Le test de spearan ayant échouer, il peut etre interessant de voir ce que cela donne tout de meme par curiosite.
kruskal.test(NOx2$valeur~NOx2$nom_station)
kruskal.test(NOx2$valeur~NOx2$nom_com)
kruskal.test(NOx2$valeur~NOx2$typologie)
plot(NOx2)
hist(moyenne.typo, xlab="moyenne µg/m3 eq NO2 par typologie ",col="purple")
hist(moyenne.typo, xlab="moyenne µg/m3 eq NO2 par typologie ",col="purple")
Les variables ne suivent pas de loi normal, le test de Pearsonn n'est donc pas fiable. Le test de spearan ayant échouer, il peut etre interessant de voir ce que cela donne tout de meme par curiosite.
length(NOx2$valeur)
length(NOx2$T..département)
cor.test (NOx2$T..département,NOx2$valeur,method="spearman")
kruskal.test(NOx2$valeur~NOx2$nom_station)
kruskal.test(NOx2$valeur~NOx2$nom_com)
NOx <- read.csv("~/Bureau/Documents/Master medas/Stat 1/stat1_examen/NOx.csv")
View(NOx)
summary (NOx)
NOx2<-NOx%>% filter(statut_valid==TRUE)
NOx2
summary(NOx2)
stripchart(NOx2$T..département,main="Temperature moyenne journaliere sur le departement",xlab="°C", ylab="T moyenne ",col="brown4",pch=20, method="jitter");
tmax <-NOx2%>% filter(NOx2$date=="2019-09-21")
tmax
tmin<- NOx2%>% filter(NOx2$date=="2019-10-15")
tmin
mean(tmax$valeur)
mean(tmin$valeur)
T=c("max","min","moyenne")
Moyenne_Nox=c(mean(tmax$valeur),mean(tmin$valeur),mean(NOx2$valeur))
Data =data.frame(T,Moyenne_Nox)
Data
summary(NOx2$nom_com)
pie(table(NOx2$nom_com), main="Proportion des mesure de NOX sur les 9 communues de loire Atlantique")
plot(NOx2$nom_com,NOx2$valeur,col="grey",border= "grey3",main="Valeurs de NOx par commune",xlab="Communes", ylab="Valeur de NOx en µg/m3 eq NO2 ")
Nantes<- NOx2%>% filter(NOx2$nom_com=="Nantes")
Montoir<- NOx2%>% filter(NOx2$nom_com=="Montoir-de-Bretagne")
Bouguenais<- NOx2%>% filter(NOx2$nom_com=="Bouguenais")
Donges<- NOx2%>% filter(NOx2$nom_com=="Donges")
Frossay<- NOx2%>% filter(NOx2$nom_com=="Frossay")
SaintÉtienne<- NOx2%>% filter(NOx2$nom_com=="Saint-Étienne-de-Montluc")
Trignac<- NOx2%>% filter(NOx2$nom_com=="Trignac")
SaintNazaire<- NOx2%>% filter(NOx2$nom_com=="Saint-Nazaire")
Rezé<- NOx2%>% filter(NOx2$nom_com=="Rezé")
mean(Nantes$valeur)
mean(Montoir$valeur)
mean(Bouguenais$valeur)
mean(Donges$valeur)
mean(Frossay$valeur)
mean(SaintÉtienne$valeur)
mean(Trignac$valeur)
mean(SaintNazaire$valeur)
mean(Rezé$valeur)
ville =c('Nantes','Bouguenais','Rezé','Trignac','Donges','Montoir de Bretagne','Saint-Nazaire','Saint-Etienne-de Montluc','Frossay');
moyenne=c(25.6,18.4,14.8,8.9,8.2,7.9,5.8,4.2,2.9);
data_commune=data.frame(ville, moyenne)
data_commune #tableau representant les moyennes de NOx par commune
hist(moyenne, xlab="moyenne µg/m3 eq NO2 ",col="yellow")
summary(NOx2$nom_station)
pie(table(NOx2$nom_station), main="Proportion des mesure de NOX sur les 14 stations de loire Atlantique")
plot(NOx2$nom_station,NOx2$valeur,col="grey",border= "grey3",main="Valeurs de NOx par stations",xlab="Stations", ylab="Valeur de NOx en µg/m3 eq NO2 ")
Ampère<- NOx2%>% filter(NOx2$nom_station=="Ampère")
mean(Ampère$valeur)
Blum<- NOx2%>% filter(NOx2$nom_station=="Blum")
mean(Blum$valeur)
Bossènes<- NOx2%>% filter(NOx2$nom_station=="Bossènes")
mean(Bossènes$valeur)
Bouteillerie<- NOx2%>% filter(NOx2$nom_station=="Bouteillerie")
mean(Bouteillerie$valeur)
Chauvinière<- NOx2%>% filter(NOx2$nom_station=="Chauvinière")
mean(Chauvinière$valeur)
Frossay<- NOx2%>% filter(NOx2$nom_station=="Frossay")
mean(Frossay$valeur)
LesCouëts<- NOx2%>% filter(NOx2$nom_station=="Les Couëts")
mean(LesCouëts$valeur)
Mégretais<- NOx2%>% filter(NOx2$nom_station=="Mégretais")
mean(Mégretais$valeur)
Montoir2<- NOx2%>% filter(NOx2$nom_station=="Montoir-de-Bretagne")
mean( Montoir2$valeur)
StEtienne<- NOx2%>% filter(NOx2$nom_station=="St-Etienne de Montluc")
mean(StEtienne$valeur)
Trentemoult <- NOx2%>% filter(NOx2$nom_station=="Trentemoult")
mean(Trentemoult$valeur)
VictorHugo<- NOx2%>% filter(NOx2$nom_station=="Victor-Hugo")
mean(VictorHugo$valeur)
Trignac<- NOx2%>% filter(NOx2$nom_station=="Trignac")
mean(Trignac$valeur)
parc<- NOx2%>% filter(NOx2$nom_station=="Parc paysager")
mean(parc$valeur)
station=c('Victor-Hugo','Ampère','Blum','Bossènes','Bouteillerie','Chauvinière','Frossay','LesCouëts','Mégretais','Montoir-de-Bretagne','St-Etienne de Montluc','Trentemoult','Trignac','Parc paysager')
moyenne.station=c(mean(VictorHugo$valeur),mean(Ampère$valeur),mean(Blum$valeur),mean(Bossènes$valeur),mean(Bouteillerie$valeur),mean(Chauvinière$valeur),mean(Frossay$valeur),mean(LesCouëts$valeur),mean(Mégretais$valeur),mean(Montoir2$valeur),mean(StEtienne$valeur),mean(Trentemoult$valeur),mean(Trignac$valeur),mean(parc$valeur))
data_station=data_frame(station,moyenne.station)
data_station #tableau representant les moyennes de NOx par Stations
hist(moyenne.station, xlab="moyenne µg/m3 eq NO2 par station ",col="yellow")
summary(NOx2$typologie)
pie(table(NOx2$typologie), main="Proportion des 3 typologies des stations de loire Atlantique")
plot(NOx2$typologie,NOx2$valeur,col="red",border= "grey3",main="Valeurs de NOx par typologie des stations",xlab="Typologie", ylab="Valeur de NOx en µg/m3 eq NO2 ")
## Moyenne des NOX par typologie :
rn<- NOx2%>% filter(NOx2$typologie=="rural-nearcity")
mean(rn$valeur)
s<- NOx2%>% filter(NOx2$typologie=="suburban")
mean(s$valeur)
u<- NOx2%>% filter(NOx2$typologie=="urban")
mean(u$valeur)
rn<-NOx2%>% filter(NOx2$typologie=="rural-nearcity")
typo=c('rural-nearcity','suburban','urban')
moyenne.typo=c(mean(rn$valeur),mean(s$valeur),mean(u$valeur))
data_typ=data.frame(typo,moyenne.typo)
data_typ #tableau representant les moyennes de NOx par commune
## Moyenne des NOX par typologie :
rn<- NOx2%>% filter(NOx2$typologie=="rural-nearcity")
mean(rn$valeur)
s<- NOx2%>% filter(NOx2$typologie=="suburban")
mean(s$valeur)
u<- NOx2%>% filter(NOx2$typologie=="urban")
mean(u$valeur)
rn<-NOx2%>% filter(NOx2$typologie=="rural-nearcity")
typo=c('rural-nearcity','suburban','urban')
moyenne.typo=c(mean(rn$valeur),mean(s$valeur),mean(u$valeur))
data_typ=data.frame(typo,moyenne.typo)
data_typ #tableau representant les moyennes de NOx par commune
hist(moyenne.typo, xlab="moyenne µg/m3 eq NO2 par typologie ",col="purple")
plot(NOx2)
NOx2$date_num= as.numeric(NOx2$date)
str(NOx2$date_num)
cor.test(NOx2$valeur,NOx2$date_num,method="spearman")
str(NOx2$date_num)
cor.test(NOx2$valeur,NOx2$date_num,method="spearman")
str(NOx2$date_num)
cor.test(NOx2$valeur,NOx2$date_num,method="spearman")
cor.test(NOx2$valeur,NOx2$date_num,method="spearman")
kruskal.test(NOx2$valeur~NOx2$nom_station)
kruskal.test(NOx2$valeur~NOx2$nom_com)
NOx <- read.csv("~/Bureau/Documents/Master medas/Stat 1/stat1_examen/NOx.csv")
View(NOx)
summary (NOx)
str(NOx)
NOx2<-NOx%>% filter(statut_valid==TRUE)
NOx2
summary(NOx2)
summary (NOx2$valeur)
sd(NOx2$valeur)
var(NOx2$valeur)
hist(NOx2$valeur,main="Valeurs de NOx sur l'ensemble du département 44",xlab="µg/m3 eq NO2", ylab="NOx",col="pink", breaks= 50,freq=FALSE) ;lines(density(NOx2$valeur)) ;
stripchart(NOx2$valeur,main="Valeurs de NOx sur l'ensemble du département 44",xlab="µg/m3 eq NO2", ylab="NOx (NO+NO2)",method="jitter",col="orange",pch=20,vertical=TRUE);lines(density(NOx2$valeur));
graphe1<-boxplot(NOx2$valeur,col="green",main="Valeurs de NOx sur l'ensemble du département 44",xlab="µg/m3 eq NO2", ylab="NOx (NO+NO2)")
plot(NOx2$date,NOx2$valeur,col="grey",border= "black",main="Valeurs de NOx dans le temps",xlab="µg/m3 eq NO2", ylab="Date")
summary(NOx2$T..département)
sd(NOx2$T..département)
var(NOx2$T..département)
boxplot(NOx2$T..département,col="green3", main="Température moyenne journalière de la Loire Atlantique du 16/9 au 16/10",xlab="°C", ylab="Température moyenne")
stripchart(NOx2$T..département,main="Temperature moyenne journaliere sur le departement",xlab="°C", ylab="T moyenne ",col="brown4",pch=20, method="jitter");
22.33-13.43
plot(NOx2$date,NOx2$T..département, main="Valeurs des temperature en fonction de la date",xlab="Temperature journaliere moyenne en °C", ylab="Date");
tmax <-NOx2%>% filter(NOx2$date=="2019-09-21")
tmax
tmin<- NOx2%>% filter(NOx2$date=="2019-10-15")
tmin
mean(tmax$valeur)
mean(tmin$valeur)
mean(NOx2$valeur)
T=c("max","min","moyenne")
Moyenne_Nox=c(mean(tmax$valeur),mean(tmin$valeur),mean(NOx2$valeur))
Data =data.frame(T,Moyenne_Nox)
Data
length(NOx2$valeur)
length(NOx2$T..département)
cor.test (NOx2$T..département,NOx2$valeur,method="spearman")
summary(NOx2$nom_com)
pie(table(NOx2$nom_com), main="Proportion des mesure de NOX sur les 9 communues de loire Atlantique")
plot(NOx2$nom_com,NOx2$valeur,col="grey",border= "grey3",main="Valeurs de NOx par commune",xlab="Communes", ylab="Valeur de NOx en µg/m3 eq NO2 ")
Nantes<- NOx2%>% filter(NOx2$nom_com=="Nantes")
Montoir<- NOx2%>% filter(NOx2$nom_com=="Montoir-de-Bretagne")
Bouguenais<- NOx2%>% filter(NOx2$nom_com=="Bouguenais")
Donges<- NOx2%>% filter(NOx2$nom_com=="Donges")
Frossay<- NOx2%>% filter(NOx2$nom_com=="Frossay")
SaintÉtienne<- NOx2%>% filter(NOx2$nom_com=="Saint-Étienne-de-Montluc")
Trignac<- NOx2%>% filter(NOx2$nom_com=="Trignac")
SaintNazaire<- NOx2%>% filter(NOx2$nom_com=="Saint-Nazaire")
Rezé<- NOx2%>% filter(NOx2$nom_com=="Rezé")
mean(Nantes$valeur)
mean(Montoir$valeur)
mean(Bouguenais$valeur)
mean(Donges$valeur)
mean(Frossay$valeur)
mean(SaintÉtienne$valeur)
mean(Trignac$valeur)
mean(SaintNazaire$valeur)
mean(Rezé$valeur)
ville =c('Nantes','Bouguenais','Rezé','Trignac','Donges','Montoir de Bretagne','Saint-Nazaire','Saint-Etienne-de Montluc','Frossay');
moyenne=c(25.6,18.4,14.8,8.9,8.2,7.9,5.8,4.2,2.9);
data_commune=data.frame(ville, moyenne)
data_commune #tableau representant les moyennes de NOx par commune
hist(moyenne, xlab="moyenne µg/m3 eq NO2 ",col="yellow")
summary(NOx2$nom_station)
pie(table(NOx2$nom_station), main="Proportion des mesure de NOX sur les 14 stations de loire Atlantique")
plot(NOx2$nom_station,NOx2$valeur,col="grey",border= "grey3",main="Valeurs de NOx par stations",xlab="Stations", ylab="Valeur de NOx en µg/m3 eq NO2 ")
Ampère<- NOx2%>% filter(NOx2$nom_station=="Ampère")
mean(Ampère$valeur)
Blum<- NOx2%>% filter(NOx2$nom_station=="Blum")
mean(Blum$valeur)
Bossènes<- NOx2%>% filter(NOx2$nom_station=="Bossènes")
mean(Bossènes$valeur)
Bouteillerie<- NOx2%>% filter(NOx2$nom_station=="Bouteillerie")
mean(Bouteillerie$valeur)
Chauvinière<- NOx2%>% filter(NOx2$nom_station=="Chauvinière")
mean(Chauvinière$valeur)
Frossay<- NOx2%>% filter(NOx2$nom_station=="Frossay")
mean(Frossay$valeur)
LesCouëts<- NOx2%>% filter(NOx2$nom_station=="Les Couëts")
mean(LesCouëts$valeur)
Mégretais<- NOx2%>% filter(NOx2$nom_station=="Mégretais")
mean(Mégretais$valeur)
Montoir2<- NOx2%>% filter(NOx2$nom_station=="Montoir-de-Bretagne")
mean( Montoir2$valeur)
StEtienne<- NOx2%>% filter(NOx2$nom_station=="St-Etienne de Montluc")
mean(StEtienne$valeur)
Trentemoult <- NOx2%>% filter(NOx2$nom_station=="Trentemoult")
mean(Trentemoult$valeur)
VictorHugo<- NOx2%>% filter(NOx2$nom_station=="Victor-Hugo")
mean(VictorHugo$valeur)
Trignac<- NOx2%>% filter(NOx2$nom_station=="Trignac")
mean(Trignac$valeur)
parc<- NOx2%>% filter(NOx2$nom_station=="Parc paysager")
mean(parc$valeur)
station=c('Victor-Hugo','Ampère','Blum','Bossènes','Bouteillerie','Chauvinière','Frossay','LesCouëts','Mégretais','Montoir-de-Bretagne','St-Etienne de Montluc','Trentemoult','Trignac','Parc paysager')
moyenne.station=c(mean(VictorHugo$valeur),mean(Ampère$valeur),mean(Blum$valeur),mean(Bossènes$valeur),mean(Bouteillerie$valeur),mean(Chauvinière$valeur),mean(Frossay$valeur),mean(LesCouëts$valeur),mean(Mégretais$valeur),mean(Montoir2$valeur),mean(StEtienne$valeur),mean(Trentemoult$valeur),mean(Trignac$valeur),mean(parc$valeur))
data_station=data_frame(station,moyenne.station)
data_station #tableau representant les moyennes de NOx par Stations
hist(moyenne.station, xlab="moyenne µg/m3 eq NO2 par station ",col="yellow")
summary(NOx2$typologie)
pie(table(NOx2$typologie), main="Proportion des 3 typologies des stations de loire Atlantique")
plot(NOx2$typologie,NOx2$valeur,col="red",border= "grey3",main="Valeurs de NOx par typologie des stations",xlab="Typologie", ylab="Valeur de NOx en µg/m3 eq NO2 ")
## Moyenne des NOX par typologie :
rn<- NOx2%>% filter(NOx2$typologie=="rural-nearcity")
mean(rn$valeur)
s<- NOx2%>% filter(NOx2$typologie=="suburban")
mean(s$valeur)
u<- NOx2%>% filter(NOx2$typologie=="urban")
mean(u$valeur)
rn<-NOx2%>% filter(NOx2$typologie=="rural-nearcity")
typo=c('rural-nearcity','suburban','urban')
moyenne.typo=c(mean(rn$valeur),mean(s$valeur),mean(u$valeur))
data_typ=data.frame(typo,moyenne.typo)
data_typ #tableau representant les moyennes de NOx par commune
hist(moyenne.typo, xlab="moyenne µg/m3 eq NO2 par typologie ",col="purple")
plot(NOx2)
NOx2$date_num= as.numeric(NOx2$date)
str(NOx2$date_num)
cor.test(NOx2$valeur,NOx2$date_num,method="spearman")
kruskal.test(NOx2$valeur~NOx2$typologie)
kruskal.test(NOx2$valeur~NOx2$nom_com)
kruskal.test(NOx2$valeur~NOx2$nom_station)
NOx <- read.csv("~/Bureau/Documents/Master medas/Stat 1/stat1_examen/NOx.csv")
View(NOx)
NOx <- read.csv("~/Bureau/Documents/Master medas/Stat 1/stat1_examen/NOx.csv")
View(NOx)
summary (NOx)
str(NOx)
NOx2<-NOx%>% filter(statut_valid==TRUE)
NOx <- read.csv("~/Bureau/Documents/Master medas/Stat 1/stat1_examen/NOx.csv")
View(NOx)
summary(NOx2)
NOx2
View(NOx2)
View(NOx2)
View(NOx2)
library(dplyr)
> library(tidyr)
library(dplyr)
library(tidyr)
NOx2<-NOx%>% filter(statut_valid==TRUE)
hist(moyenne.typo, xlab="moyenne µg/m3 eq NO2 par typologie ",col="purple")
if("rgl" %in% rownames(installed.packages()) == FALSE) {install.packages("rgl")};library(rgl)
install.packages("rgl")
install.packages("rgl")
if("rgl" %in% rownames(installed.packages()) == FALSE) {install.packages("rgl")};library(rgl)
install.packages("leaflet")
install.packages("sf")
install.packages("raster")
install.packages("ggplot2")
install.packages("yarrr")
install.packages("rmarkdown")
install.packages("knitr")
install.packages("htmlwidgets")
install.packages("rgeos")
install.packages("magrittr")
install.packages("knitr")
library(help = 'base')
remotes::install_github("MaelTheuliere/variousdata")
library(variousdata)
remotes::install_github("MaelTheuliere/variousdata")
library(variousdata)
sdg_indicators %>%
filter(timeperiod ==2015) %>%
ggplot() +
geom_point(aes(x = gdp_per_cap, y = sh_sta_mmr))
library(sf)
library(tidyverse)
library(ggplot2)
library(patchwork)
library(lwgeom)
#remotes::install_github("MaelTheuliere/variousdata")
library(variousdata)
library(ggspatial)
sdg_indicators %>%
filter(timeperiod ==2015) %>%
ggplot() +
geom_point(aes(x = gdp_per_cap, y = sh_sta_mmr))
install.packages("sf")
if ("data.table" %in% rownames(installed.packages()) == FALSE) { install.packages("data.table", dependencies=TRUE)};library(data.table)
if(is.null(y)) {
if(graph) par(mfrow=c(1,2))
shapiro.px <- normaTest(x, graph, hist.title=paste("X - Histogram", wording[1], sep=" "), qq.title="X - Normal Q-Q Plot")
if(shapiro.px < 0.05)
warning("x is not normally distributed :",
" Shapiro-Wilk test p-value : ", shapiro.px,
".\n Use a non-parametric test like Wilcoxon test.")
}
if(!is.null(y)){
# I.2.a unpaired t test
if(!paired){
if(graph) par(mfrow=c(2,2))
# normality test
shapiro.px <- normaTest(x, graph,
hist.title=paste("X - Histogram", wording[1], sep=" "),
qq.title=paste("X - Normal Q-Q Plot", wording[1], sep=" "))
shapiro.py <- normaTest(y, graph,
hist.title=paste("Y - Histogram", wording[2], sep=" "),
qq.title=paste("Y - Normal Q-Q Plot", wording[2], sep=" "))
if(shapiro.px < 0.05 | shapiro.py < 0.05) {
warning("x or y is not normally distributed :",
" Shapiro test p-value : ", shapiro.px,
" (for x) and ", shapiro.py, " (for y)",
".\n Use a non parametric test like Wilcoxon test.")
}
# Check for equality of variances
if(var.test(x,y)$p.value >= 0.05) var.equal=TRUE
}
# I.2.b Paired t-test
else {
if(graph) par(mfrow=c(1,2))
d = x-y
shapiro.pd <- normaTest(d, graph, hist.title=paste("D - Histogram", wording[1], sep=" "), qq.title="D - Normal Q-Q Plot")
if(shapiro.pd < 0.05 )
warning("The difference d ( = x-y) is not normally distributed :",
" Shapiro-Wilk test p-value : ", shapiro.pd,
".\n Use a non-parametric test like Wilcoxon test.")
}
}
source('script/functions.R')
load_libraries()
library()
install.packages(c("askpass", "backports", "BH", "boot", "broom", "callr", "caret", "class", "cli", "clipr", "cluster", "codetools", "colorspace", "crayon", "curl", "data.table", "DBI", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "fansi", "forcats", "foreach", "formatR", "fs", "generics", "ggplot2", "glmnet", "glue", "gower", "haven", "hexbin", "highr", "hms", "htmltools", "htmlwidgets", "httpuv", "httr", "ipred", "IRdisplay", "IRkernel", "iterators", "jsonlite", "KernSmooth", "knitr", "labeling", "later", "lattice", "lava", "lubridate", "magrittr", "maps", "markdown", "MASS", "Matrix", "mgcv", "mime", "ModelMetrics", "modelr", "nlme", "nnet", "numDeriv", "openssl", "pbdZMQ", "pillar", "pkgconfig", "plyr", "prettyunits", "processx", "prodlim", "progress", "promises", "ps", "purrr", "quantmod", "R6", "Rcpp", "readr", "recipes", "repr", "reprex", "reshape2", "rlang", "rmarkdown", "rpart", "rstudioapi", "rvest", "scales", "selectr", "shiny", "spatial", "SQUAREM", "stringi", "survival", "sys", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "TTR", "utf8", "uuid", "viridisLite", "whisker", "withr", "xfun", "xml2", "xts", "yaml", "zoo"))
install.packages("curl")
library()
source('script/functions.R')
source('script/functions.R')
setwd("~/Documents/Master medas/M2/Projet_stat2/Projet_ChurnBank_Stat2Medas")
library()
source('script/functions.R')
load_libraries()
install.packages("car", dependencies = TRUE)
View(desc_stat)
View(estimate_nb_cluster)
View(graph_target_correlation)
View(desc_stat)
data <- read.csv("data/BankChurners.csv", sep = ",")
